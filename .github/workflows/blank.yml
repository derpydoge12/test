# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the jobusing UnityEngine;
using System.Collections;
 
public class CharacterController : MonoBehaviour {
    private Rigidbody rg;
    public float speed = 10.0F;
    public float jumpspeed = 10.0F;
   
   
    void Start () {
        Cursor.lockState = CursorLockMode.Locked;
        rg = GetComponent <Rigidbody> ();
    }
   
   
    void Update () {
        float translation = Input.GetAxis ("Vertical") * speed;
        float straffe = Input.GetAxis ("Horizontal") * speed;
        translation *= Time.deltaTime;
        straffe *= Time.deltaTime;
       
        transform.Translate (straffe, 0, translation);
       
        if (Input.GetKey (KeyCode.Space)) {
            Vector3 atas = new Vector3 (0,100,0);
            rg.AddForce(atas * speed);
        }
       
        if (Input.GetKeyDown ("escape"))
            Cursor.lockState = CursorLockMode.None;
       
       
    }
   
}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
